{"version":3,"file":"bundle.js","sources":["codeword.js","geometry.js","polygon.js","menu.js","button.js","index.js"],"sourcesContent":["/**\n * @param {number} n  N-polygon sides\n * @return {number[][]} All valid codewords for an N-polygon\n */\nexport default function getCodeWords(n) {\n  const UP = 0;\n  const DOWN = 1;\n\n  let codeword = new Array(n).fill(-1);\n  let direction = new Array(n).fill(-1);\n  let pushPoint = new Array(n).fill(-1);\n  let maxValue = new Array(n).fill(-1);\n  let codeWordList = [];\n\n  function initialize() {\n    codeword[0] = n - 1;\n    for (let j = 1; j < n; j++) {\n      codeword[j] = 0;\n      pushPoint[j] = 0;\n    }\n    codeWordList.push([...codeword]);\n  }\n\n  function generate_all_trees(position) {\n    if (position === 0) {\n      return;\n    }\n\n    if (position === n - 1) {\n      maxValue[position] = 1;\n    } else if (position !== 0) {\n      maxValue[position] =\n        maxValue[position + 1] +\n        1 -\n        codeword[position + 1];\n    }\n\n    if (codeword[position] == 0) {\n      direction[position] = UP;\n    } else {\n      direction[position] = DOWN;\n    }\n\n    generate_all_trees(position - 1);\n\n    for (let i = 0; i < maxValue[position]; i++) {\n      if (direction[position] == UP) {\n        pull(position, pushPoint[position]);\n      } else {\n        push(position, pushPoint[position]);\n      }\n      generate_all_trees(position - 1);\n    }\n\n    if (position !== n - 1) {\n      if (direction[position] == UP) {\n        pushPoint[position + 1] = position;\n      } else {\n        pushPoint[position + 1] =\n          pushPoint[position];\n      }\n    }\n  }\n\n  function push(i, j) {\n    codeword[i] = codeword[i] - 1;\n    codeword[j] = codeword[j] + 1;\n    codeWordList.push([...codeword]);\n  }\n\n  function pull(i, j) {\n    codeword[i] = codeword[i] + 1;\n    codeword[j] = codeword[j] - 1;\n    codeWordList.push([...codeword]);\n  }\n\n  initialize();\n  generate_all_trees(n - 1);\n\n  return codeWordList;\n}","const createEdge = (p1, p2, start, end) => {\n  let x = (p1.x + p2.x) / 2;\n  let y = (p2.y + p2.y) / 2;\n\n  let x_diff = p1.x - p2.x;\n  let y_diff = p1.y - p2.y;\n  let dist = Math.hypot(x_diff, y_diff);\n  return { p1, p2, midpoint: { x, y }, dist, start_idx: start, end_idx: end };\n};\n\nexport const createPolygonPoints = (\n  N,\n  r,\n  leftOffset,\n  topOffset\n) => {\n  let points = [];\n  let inc = (2 * Math.PI) / N;\n  for (let i = 0; i < N; i++) {\n    let theta =\n      inc * (i + 1) + (Math.PI * 3) / 2 - inc / 2;\n\n    let r_x = r + leftOffset;\n    let r_y = r + topOffset;\n\n    let x = r * Math.cos(theta) + r_x;\n    let y = r * Math.sin(theta) + r_y;\n\n    let vec_x = x - r_x;\n    let vec_y = y - r_y;\n    let mag = Math.sqrt(\n      vec_x * vec_x + vec_y * vec_y\n    );\n    let ux = vec_x / mag;\n    let uy = vec_y / mag;\n\n    // x = +x.toFixed(2)\n    // y = +y.toFixed(2)\n    // ux = +ux.toFixed(2)\n    // uy = +uy.toFixed(2)\n    let point = { x, y, ux, uy };\n    points.push(point);\n  }\n  points.reverse();\n  return points;\n};\n\nexport const createPolygonEdges = (points) => {\n  let edges = [];\n  const N = points.length;\n  for (let i = 0; i < N; i++) {\n    let curr_point = points[i];\n\n    let next_point_idx = (i + 1) % N\n    let next_point = points[next_point_idx];\n    let edge = createEdge(curr_point, next_point, i, next_point_idx);\n    edges.push(edge);\n  }\n  return edges;\n};\n\nexport const getCodewordEdges = (points, codeword) => {\n  const N = points.length;\n  const getWrapIndex = (idx) => idx % N;\n  const fillCrossings = (\n    crossings,\n    start,\n    end\n  ) => {\n    for (let i = start + 1; i < end; i++) {\n      crossings[getWrapIndex(i)] = true;\n    }\n  };\n  const findCodeEdges = (\n    crossings,\n    point,\n    code\n  ) => {\n    // Offset by 2 vertices since edges cannot be next to each other\n    let edgePoint = point + 2;\n    let edges = [];\n    while (code > 0) {\n      let ind = getWrapIndex(edgePoint);\n      // If there are no crossing at the index, then it's a valid edge\n      if (!crossings[ind]) {\n        edges.push(getWrapIndex(ind));\n        code--;\n        fillCrossings(\n          crossings,\n          point,\n          edgePoint\n        );\n      }\n      edgePoint++;\n    }\n    return edges;\n  };\n\n  let all_edges = [];\n  let crossings = new Array(N).fill(false);\n  let startIndex = codeword.length - 1;\n  for (let i = startIndex; i >= 0; i--) {\n    let code = codeword[i];\n    if (code != 0) {\n      let edges = findCodeEdges(\n        crossings,\n        i,\n        code\n      );\n      for (let j = 0; j < edges.length; j++) {\n        let edge = edges[j]\n        let p1 = points[i];\n        let p2 = points[edge];\n        let e = createEdge(p1, p2, i, edge);\n        all_edges.push(e);\n      }\n    }\n  }\n  \n  return all_edges;\n};","import {\n  select,\n  transition,\n  line,\n  dispatch,\n} from 'd3';\n\nimport {\n  createPolygonPoints,\n  createPolygonEdges,\n  getCodewordEdges,\n} from './geometry';\n\n\n/**\n * The order of the edges in e2 is as closely matched to e1 as much as possible\n * If there are at least 2 edge differences, the original e2 is returned\n * Otherwise, an ordered e2 is return\n * @param {Object[]} e1 The previous interior edges\n * @param {Object[]} e2 The current interior edges\n * @return {Object[]} All valid codewords for an N-polygon\n */\nconst positionEdges = (e1, e2) => {\n  if (e1 == null || e1.length == 0) return e2\n\n  let new_res = new Array(e1.length).fill(-1)\n  let numbers = Array.from(Array(e1.length).keys())\n  let unusedIndex = new Set(numbers)\n\n  let idxDict = {}\n  for (let i = 0; i < e1.length; i++) {\n    let { start_idx, end_idx } = e1[i]\n    let key = \"\" + start_idx + end_idx\n    idxDict[key] = i\n  }\n\n  let count = 0\n  let unused = null\n  for (let j = 0; j < e2.length; j++) {\n    let { start_idx, end_idx } = e2[j]\n    let key = \"\" + start_idx + end_idx\n    if (idxDict[key] == undefined) {\n      unused = e2[j]\n      count += 1\n    } else if (idxDict[key] !== j) {\n      new_res[idxDict[key]] = e2[j]\n      unusedIndex.delete(idxDict[key])\n    } else {\n      new_res[j] = e2[j]\n      unusedIndex.delete(j)\n    }\n  }\n\n  if (count > 1) return e2\n\n  let keys = unusedIndex.keys()\n  let value = keys.next().value\n\n  new_res[value] = unused\n\n  return new_res\n}\n\nexport const polygon = () => {\n  let N;\n  let codeword;\n  let color;\n  let pointColor;\n  let radius;\n  let pointSize;\n  let margin;\n  let transDuration;\n  let strokeWidth;\n\n  let drawDelay;\n\n  let lastEdges;\n\n  let interp;\n\n  const listeners = dispatch('end');\n\n  const my = (selection) => {\n\n\n    let points = createPolygonPoints(N, radius, margin.left, margin.top);\n    let polygonEdges = createPolygonEdges(points);\n    let interiorEdges = getCodewordEdges(points, codeword);\n\n    // NOTE: This code is very dangerous, refactor later\n    if (lastEdges != null) {\n      interiorEdges = positionEdges(lastEdges, interiorEdges)\n    }\n    lastEdges = interiorEdges\n    const t = transition().duration(transDuration);\n    const pointLine = line()\n      .x((d) => d.x)\n      .y((d) => d.y);\n\n    const positionLines = (lines) => {\n      lines\n        .attr('x1', (d) => d.p1.x)\n        .attr('y1', (d) => d.p1.y)\n        .attr('x2', (d) => d.p2.x)\n        .attr('y2', (d) => d.p2.y)\n    };\n\n    const initializeRadius = (circles) => {\n      circles.attr('r', 0);\n    };\n\n    const growRadius = (enter) => {\n      enter\n        .transition(t)\n        .attr('r', pointSize)\n        .attr('fill', pointColor);\n    };\n\n    const positionCircles = (circles) => {\n      circles\n        .attr('cx', (d) => d.x)\n        .attr('cy', (d) => d.y);\n    };\n\n    const positionText = (text) => {\n      text\n        .attr('x', (d) => d.x - 3 + d.ux * 15)\n        .attr('y', (d) => d.y + 6 + d.uy * 15)\n    };\n\n\n    selection\n      .selectAll('text')\n      .data(points)\n      .join(\n        (enter) => {\n          enter\n            .append('text')\n            .attr('font-size', '0px')\n            .call(positionText)\n            .transition(t)\n            .attr('font-size', '16px')\n            .text((_, i) => i);\n        },\n\n        (update) =>\n          update.call((update) =>\n            update\n              .transition(t)\n              .call(positionText)\n          ),\n        (exit) =>\n          exit\n            .transition(t)\n            .attr('font-size', '0px')\n            .remove()\n      )\n      .transition(t)\n      .attr('opacity', '1')\n      .text((_, i) => i);\n\n    selection\n      .selectAll('circle')\n      .data(points)\n      .join(\n        (enter) =>\n          enter\n            .append('circle')\n            .call(positionCircles)\n            .call(initializeRadius)\n            .call(growRadius),\n        (update) =>\n          update.call((update) =>\n            update\n              .transition(t)\n              .call(positionCircles)\n          ),\n        (exit) =>\n          exit\n            .transition(t)\n            .duration(1000)\n            .call(initializeRadius)\n            .remove()\n      );\n\n    selection\n      .selectAll('line')\n      .data(polygonEdges)\n      .join(\n        (enter) =>\n          enter\n            .append('line')\n            .attr('stroke-opacity', '0.0')\n            .transition(t)\n            .attr('stroke-opacity', '1.0')\n            .call(positionLines),\n        (update) =>\n          update.call((update) =>\n            update\n              .transition(t)\n              .call(positionLines)\n          ),\n        (exit) =>\n          exit\n            .transition(t)\n            .attr('stroke-opacity', '0.0')\n            .attr('x1', (_) => 0)\n            .attr('y1', (_) => 0)\n            .attr('x2', (_) => 0)\n            .attr('y2', (_) => 0)\n            .remove()\n      )\n      .attr('stroke', color)\n      .attr('stroke-width', strokeWidth);\n\n    selection\n      .selectAll('path')\n      .data(interiorEdges)\n      .join(\n        (enter) => {\n          enter\n            .append('path')\n            .attr('class', 'interior')\n            .attr('stroke-width', strokeWidth)\n            .attr('d', (d) =>\n              pointLine([d.p1, d.p2])\n            )\n            .attr(\n              'stroke',\n              (d) => interp((d.start_idx / interiorEdges.length))\n            )\n            .attr('opacity', '0')\n            .transition()\n            .delay((_, i) => i * drawDelay)\n            .attr(\n              'stroke-dasharray',\n              (d) => d.dist + ' ' + d.dist\n            )\n            .attr(\n              'stroke-dashoffset',\n              (d) => d.dist\n            )\n            .transition()\n            .attr('stroke-opacity', '1.0')\n            .duration(1000)\n            .attr('opacity', '1')            \n            .on('end', (event) => {\n              listeners.call('end', null);\n            })\n            .attr('stroke-dashoffset', 0);\n        },\n\n        (update) => {\n          update.call((update) => {\n            update\n              .attr(\n                'stroke-dasharray',\n                null\n              )\n              .attr(\n                'stroke-dashoffset',\n                null\n              )\n              .transition(t)\n              .attr(\n                'stroke',\n                (d) => interp((d.start_idx / interiorEdges.length))\n              )\n              .attr('d', (d) =>\n                pointLine([d.p1, d.p2])\n              )\n          });\n        },\n\n        (exit) => {\n          exit\n            .transition(t)\n            .attr('stroke-opacity', '0.0')\n            .attr('x1', 0)\n            .attr('y1', 0)\n            .attr('x2', 0)\n            .attr('y2', 0)\n            .remove();\n        }\n      );\n  };\n\n  my.codeword = function (_) {\n    return arguments.length\n      ? ((codeword = _), my)\n      : codeword;\n  };\n\n  my.color = function (_) {\n    return arguments.length\n      ? ((color = _), my)\n      : color;\n  };\n\n  my.radius = function (_) {\n    return arguments.length\n      ? ((radius = _), my)\n      : radius;\n  };\n\n  my.pointSize = function (_) {\n    return arguments.length\n      ? ((pointSize = _), my)\n      : pointSize;\n  };\n\n  my.pointColor = function (_) {\n    return arguments.length\n      ? ((pointColor = _), my)\n      : pointColor;\n  };\n\n  my.N = function (_) {\n    this.reset()\n    return arguments.length ? (\n      (N = _), my) : N;\n  };\n\n  my.reset = function() {\n    lastEdges = null;\n    codeword = []\n    return my;\n  }\n\n  my.margin = function (_) {\n    return arguments.length\n      ? ((margin = _), my)\n      : margin;\n  };\n\n  my.strokeWidth = function (_) {\n    return arguments.length\n      ? ((strokeWidth = _), my)\n      : strokeWidth;\n  };\n\n\n  my.interp = function (_) {\n    return arguments.length\n      ? ((interp = _), my)\n      : interp;\n  };\n\n  my.drawDelay = function (_) {\n    return arguments.length\n      ? ((drawDelay = _), my)\n      : drawDelay;\n  };\n\n  my.transDuration = function (_) {\n    return arguments.length\n      ? ((transDuration = _), my)\n      : transDuration;\n  };\n\n  my.on = function () {\n    var value = listeners.on.apply(\n      listeners,\n      arguments\n    );\n    return value === listeners ? my : value;\n  };\n\n  return my;\n};\n","// Credits to Curran Kelleher!\n// https://vizhub.com/forum/t/episode-11-charts-with-menus/216\n\nimport { dispatch } from 'd3';\nexport const menu = () => {\n  let id;\n  let labelText;\n  let options;\n  const listeners = dispatch('change');\n  const my = (selection) => {\n    selection\n      .selectAll('label')\n      .data([null])\n      .join('label')\n      .attr('for', id)\n      .text(labelText);\n\n    selection\n      .selectAll('select')\n      .data([null])\n      .join('select')\n      .attr('id', id)\n      .on('change', (event) => {\n        listeners.call('change', null, event.target.value);\n      })\n      .selectAll('option')\n      .data(options)\n      .join('option')\n      .attr('value', (d) => d.value)\n      .text((d) => d.text);\n  };\n\n  my.id = function (_) {\n    return arguments.length ? ((id = _), my) : id;\n  };\n\n  my.labelText = function (_) {\n    return arguments.length\n      ? ((labelText = _), my)\n      : labelText;\n  };\n\n  my.options = function (_) {\n    return arguments.length ? ((options = _), my) : options;\n  };\n\n  my.on = function () {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? my : value;\n  };\n\n  return my;\n};\n","import { dispatch } from 'd3';\nexport const button = () => {\n  let id;\n  let labelText;\n  const listeners = dispatch('click');\n  \n  const my = (selection) => {\n    selection\n      .selectAll('button')\n      .data([null])\n      .join('button')\n      .attr('id', id)\n      .text(labelText)\n      .on('click', () => {\n        listeners.call('click', null);\n      })\n  };\n\n  my.id = function (_) {\n    return arguments.length ? ((id = _), my) : id;\n  };\n\n  my.labelText = function (_) {\n    return arguments.length\n      ? ((labelText = _), my)\n      : labelText;\n  };\n\n  my.on = function () {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? my : value;\n  };\n\n  return my;\n};\n","import { select } from 'd3';\nimport getCodeWords from './codeword';\nimport { polygon } from './polygon';\nimport { menu } from './menu';\nimport { button } from './button';\n// https://gist.github.com/mbostock/1125997\n// https://observablehq.com/@mbostock/scrubber\n// https://stackoverflow.com/questions/23048263/pausing-and-resuming-a-transition\n\nconst margin = {\n  top: 20,\n  right: 30,\n  bottom: 7,\n  left: 20,\n};\n\nconst N = 4;\nlet codewords = getCodeWords(N - 2);\n\nconst mapCodewords = (cws) =>\n  cws.map((code) => ({\n    value: code,\n    text: code,\n  }));\n\nconst createCodewordOptions = (cws) => {\n  const noneOption = [\n    {\n      value: 'none',\n      text: 'None',\n    },\n  ];\n  const options = noneOption.concat(\n    mapCodewords(cws)\n  );\n  return options;\n};\n\nlet codeword = [];\n\nconst width =\n  window.innerWidth - margin.left - margin.right;\nconst height =\n  window.innerHeight - margin.top - margin.bottom;\n\n\nconst title = select('body')\n  .append('h1')\n  .text(`Rotational Hamiltonian Trees`);\n\n// const original = select('body')\n//   .append('h3')\n//   .text(`Original: ${\"WIP\"}`);\n\nconst codewordHeader = select('body')\n  .append('h3')\n  .text(`Codeword: ${codeword}`);\n\nconst menuContainer = select('body')\n  .append('div')\n  .attr('class', 'menu-container');\n\nconst svg = select('body')\n  .append('svg')\n  .attr('width', width)\n  .attr('height', height);\n\nconst NMenu = menuContainer.append('div');\nconst codewordMenu = menuContainer.append('div');\nconst startAnimationButton = menuContainer.append(\n  'div'\n);\nconst restartDrawButton = menuContainer.append(\n  'div'\n);\n\n\nconst radius = 100;\nconst pointSize = 4;\n\nconst color = 'black';\nconst pointColor = 'black';\nconst interp = d3[\"interpolateViridis\"]\n\n// const decLast = (codeword) => {\n//   let N = codeword.length - 1;\n//   while (N >= 0) {\n//     if (codeword[N] > 0) {\n//       codeword[N] -= 1;\n//       break;\n//     }\n//     N -= 1;\n//   }\n// };\n\nconst NOptions = d3.range(4, 12).map((n) => ({\n  value: n,\n  text: n,\n}));\n\nlet animationInter = null\n\n\nlet index = 0;\nfunction playAnimation(poly) {\n  clearInterval(animationInter)\n  index = 0\n  animationInter = setInterval(() => {\n    if (index >= codewords.length) {\n      index = 0\n      clearInterval(animationInter)\n    } else {\n      let cw = codewords[index]\n      svg.call(poly.codeword(cw))\n      select(\"#codeword-menu\").property(\"selectedIndex\", index + 1)\n      codewordHeader.text(`Codeword: ${cw}`)\n      index += 1;\n    }\n  }, 1000);\n}\n\nfunction main() {\n  const cw = menu()\n    .id('codeword-menu')\n    .labelText('Codeword:')\n    .options(createCodewordOptions(codewords))\n    .on('change', (cw) => {\n      let parsedCodeword = []\n      if (cw != 'none') {\n        parsedCodeword = cw.split(',');\n      } else {\n        poly.reset()\n      }\n      clearInterval(animationInter)\n      svg.call(poly.codeword(parsedCodeword));\n      codewordHeader.text(`Codeword: ${parsedCodeword}`);\n      \n    });\n    \n  const nChoiceMenu = menu()\n    .id('n-menu')\n    .labelText('N:')\n    .options(NOptions)\n    .on('change', (n) => {\n      const cws = getCodeWords(n - 2);\n      codewords = cws\n      const options = createCodewordOptions(cws);\n      select(\"#codeword-menu\").property(\"selectedIndex\", -1)\n      codewordMenu.call(cw.options(options));\n      clearInterval(animationInter)\n      svg.call(poly.N(n))\n      codewordHeader.text(`Codeword: ${[]}`)\n    });\n\n  const restartButton = button()\n    .labelText('Restart')\n    .id('restart-button')\n    .on('click', (_) => {\n      // const before = poly.interiorEdges();\n      // const colormap = poly.colorMap();\n\n      clearInterval(animationInter)\n      svg.call(poly.reset());\n\n      //   .call(\n      //   poly.updateInteriorEdges(before, colormap)\n      // );\n    });\n\n  const startButton = button()\n    .labelText('Start anim')\n    .id('start-button')\n    .on('click', (_) => {\n      playAnimation(poly);\n    });\n\n  const poly = polygon()\n    .N(N)\n    .codeword(codeword)\n    .radius(radius)\n    .pointSize(pointSize)\n    .pointColor(pointColor)\n    .strokeWidth(2)\n    .color(color)\n    .margin(margin)\n    .drawDelay(500)\n    .transDuration(1000)\n    .interp(interp)\n    .on('end', (_) => {\n      // decLast(codeword);\n      // codewordHeader.text(\n      //   `Codeword: ${codeword}`\n      // );\n      // codewordHeader.call(setText, cw)\n  });\n  \n  startAnimationButton.call(startButton);\n  restartDrawButton.call(restartButton);\n\n  codewordMenu.call(cw);\n  svg.call(poly);\n  NMenu.call(nChoiceMenu);\n}\n\nmain();\n"],"names":["const","let","key","start_idx","end_idx","dispatch","transition","line","select"],"mappings":"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"}